# Generated by Django 5.2.6 on 2025-09-19 19:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Dog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=120)),
                ("slug", models.SlugField(blank=True, max_length=140, unique=True)),
                (
                    "sex",
                    models.CharField(
                        choices=[("F", "Female"), ("M", "Male")], max_length=1
                    ),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                ("color", models.CharField(blank=True, max_length=120)),
                ("bio", models.TextField(blank=True)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="dogs/photos/"),
                ),
                ("retired", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Dog",
                "verbose_name_plural": "Dogs",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("start_datetime", models.DateTimeField()),
                ("end_datetime", models.DateTimeField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("details", models.TextField(blank=True)),
                ("map_link", models.URLField(blank=True)),
                ("is_published", models.BooleanField(default=True)),
            ],
            options={"ordering": ["start_datetime"],},
        ),
        migrations.CreateModel(
            name="GalleryImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.CharField(
                        choices=[("grown", "Grown Pics"), ("general", "General")],
                        default="general",
                        max_length=32,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="gallery/"),
                ),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("is_published", models.BooleanField(default=True)),
            ],
            options={"ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=220, unique=True)),
                (
                    "hero_image",
                    models.ImageField(blank=True, null=True, upload_to="pages/hero/"),
                ),
                ("body", models.TextField(blank=True)),
                ("is_published", models.BooleanField(default=True)),
            ],
            options={"ordering": ["title"],},
        ),
        migrations.CreateModel(
            name="SupplyItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=180)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="supplies/"),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=120)),
                ("in_stock", models.BooleanField(default=True)),
                ("is_published", models.BooleanField(default=True)),
            ],
            options={"ordering": ["name"],},
        ),
        migrations.CreateModel(
            name="Litter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Optional display name (e.g., 'Spring 2025 – Daisy × Max')",
                        max_length=140,
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=160, unique=True)),
                ("expected_date", models.DateField(blank=True, null=True)),
                ("whelp_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("UPCOMING", "Upcoming"), ("PAST", "Past")],
                        default="UPCOMING",
                        max_length=16,
                    ),
                ),
                (
                    "dam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="litters_as_dam",
                        to="website.dog",
                    ),
                ),
                (
                    "sire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="litters_as_sire",
                        to="website.dog",
                    ),
                ),
            ],
            options={"ordering": ["-expected_date", "-whelp_date", "-created_at"],},
        ),
        migrations.CreateModel(
            name="Puppy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=120)),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("F", "Female"), ("M", "Male")],
                        max_length=1,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=120)),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AVAILABLE", "Available"),
                            ("RESERVED", "Reserved"),
                            ("SOLD", "Sold"),
                        ],
                        default="AVAILABLE",
                        max_length=10,
                    ),
                ),
                (
                    "main_photo",
                    models.ImageField(blank=True, null=True, upload_to="puppies/main/"),
                ),
                ("health_notes", models.TextField(blank=True)),
                (
                    "contract_pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="puppies/contracts/"
                    ),
                ),
                (
                    "litter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="puppies",
                        to="website.litter",
                    ),
                ),
            ],
            options={"ordering": ["litter", "name"],},
        ),
    ]
